GRRRRRRRRRR!!!
So... i think i finally got that crap!!!!


Let's Go:

- 1
First, you’ll need to sign up for an account on *GitHub.com*. It’s as simple as...
~https://readwrite.com/2013/09/30/understanding-github-a-journey-for-beginners-part-1/

You might as well keep going! do the the section --> "Creating Your Online Repository" 

- 2	
From your remote box;
Generate SSH key using ssh-keygen -t rsa -b 2048 -C "your_email@foo.com".

Copy the output of cat id_rsa.pub
Paste the above copied output into your Github profile -> Settings -> SSH and GPG Keys -> Add new SSH key.

- 2b
make sure you have named the "public key" and "private key" files properly; 
precisely ----> "id_rsa" and "id_rsa.pub"  <----- 

Restart your terminal ( bash supported) and try to clone again

if you have the write access to the repo, you should be good to go after these changes.
Talking from experience (after spending an hour), 
I could not find any info on any forum that stated that we have to explicitly keep the name of the private and public file as mentioned above.
Happy coding!

- 3
Now its time to Clone-down your Repo (from Github to your Remote box)


$ git clone git@github.com:swaingant/hello_world.git
Clonar en «hello_world»...
The authenticity of host 'github.com (192.30.253.113)' can't be established.
RSA key fingerprint is SHA256:nThxxxxxxxxxxxxxxxxx8.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'github.com,192.30.253.113' (RSA) to the list of known hosts.
warning: Parece que ha clonado un repositorio vacío.
Comprobando la conectividad… hecho.

~https://readwrite.com/2013/10/02/github-for-beginners-part-2/
~https://services.github.com/on-demand/github-cli/clone-repo-cli

- 4
Eyes Closed!!

620  cd hello_world/
621  git remote -v
622  ls -lh

623  git status
624  nano Git-LOST.txt
626  git status
627  git add *
628  git status
629  git commit -m "Lets Go PUTAS"
632  git push
633  git status



~~~~~ troubleshot  ~~~~~~

- 1
to Un-Add a file:
$ git rm --cached trash2.txt


- 2
to Un-Add a Repo (i guess start over)

this worked for me:
A) remove all origins
$ git remote rm origin  

B) check all has been removed :
$ git remote -v  

C) add new origin master
git remote add origin blahblahblah

- 3
** i dont know what syntax to swap here...

For me I had to set what host to use what SSH key. In your local machine SSH folder, usually under ~/.ssh 
create the file ---> config

~/.ssh/$ nano config
and add the following with your git Host, HostName, and ssh IdentityFile (your ssh private key file path):

Host gitlab.example.com
    HostName gitlab.example.com
    IdentityFile /home/YOURUSERNAME/.ssh/pooky123_rsa

~meh

